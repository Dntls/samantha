samantha.ml20m {
  engineType = "RECOMMENDER"
  indexers = [
    {
      name = "loggerBasedIndexer"
      configClass = "org.grouplens.samantha.server.indexer.LoggerBasedIndexerConfig"
    }, {
      name = "tensorFlowFeaturizedJsonBatch"
      configClass = "org.grouplens.samantha.server.indexer.JsonFileIndexerConfig"
      indexType = "ml20mTensorFlowFeaturizedJsonBatch500"
      filesKey = "files"
      dataFields = ["tstamp", "user_idx", "item_idx", "genre_idx", "tag_idx"]
      timestampField = "tstamp"
      daoName = "TimeFilteredDAO"
      daoNameKey = "entityDaoName"
      subDaoName = "JsonFileListEntityDAO"
      subDaoConfigKey = "subDaoConfig"
      beginTimeKey = "beginTime"
      endTimeKey = "endTime"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
      dataSubscribers = []
    }, {
      name = "userMovieRating"
      configClass = "org.grouplens.samantha.server.indexer.CSVFileIndexerConfig"
      indexType = "ml20mUserMovieRating"
      filesKey = "files"
      separatorKey = "separator"
      dataFields = ["timestamp", "userId", "movieId", "genre", "tag", "rating"]
      timestampField = "timestamp"
      daoName = "TimeFilteredDAO"
      daoNameKey = "entityDaoName"
      subDaoName = "CSVFileListEntityDAO"
      subDaoConfigKey = "subDaoConfig"
      beginTimeKey = "beginTime"
      endTimeKey = "endTime"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
      dataSubscribers = []
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.TFIDFKnnExpander"
          modelName = "ml20mTFIDFMovieGenreKnnModel"
          modelFile = ${samantha.modelDir}"/m20mTFIDFMovieGenreKnnModel.bin"
          itemAttrs = ["movieId"]
          feaAttrs = ["genre"]
          scoreAttr = "genreTFIDF"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.TFIDFKnnExpander"
          modelName = "ml20mTFIDFMovieTagKnnModel"
          modelFile = ${samantha.modelDir}"/m20mTFIDFMovieTagKnnModel.bin"
          itemAttrs = ["movieId"]
          feaAttrs = ["tag"]
          scoreAttr = "tagTFIDF"
        }
      ]
    }, {
      name = "groupedUserMovieRating"
      configClass = "org.grouplens.samantha.server.indexer.GroupedIndexerConfig"
      dependedIndexer = "userMovieRating"
      dataFields = ["timestamp", "userId", "movieId", "genre", "tag", "rating"]
      filesKey = "files"
      separatorKey = "separator"
      daoName = "CSVFileListEntityDAO"
      daoNameKey = "entityDaoName"
      groupKeys = ["userId"]
      orderFields = ["timestamp"]
      orderFieldsTypes = ["INT"]
      numBuckets = 100
      skip = true
      separator = "\t"
      dataDir = ${samantha.dataDir}"/ml20mGroupedUserMovieRating"
      dataDirKey = "dataDir"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
    }, {
      name = "userMovieRatingSequence"
      configClass = "org.grouplens.samantha.server.tensorflow.UserSequenceIndexerConfig"
      dependedIndexer = "groupedUserMovieRating"
      groupKeys = ["userId"]
      otherDataFields = ["timestamp", "movieId", "genre", "tag", "rating"]
      filesKey = "files"
      filePath = ${samantha.dataDir}"/userMovieRatingSequence.tsv"
      filePathKey = "filePath"
      separatorKey = "separator"
      daoName = "CSVFileListEntityDAO"
      daoNameKey = "entityDaoName"
      separator = "\t"
      innerFieldSeparator = "|"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
    }, {
      name = "userSequenceTensorFlowBatch"
      configClass = "org.grouplens.samantha.server.tensorflow.TensorFlowBatchIndexerConfig"
      dependedIndexer = "tensorFlowFeaturizedJsonBatch"
      tensorFlowPredictor = "ml20mTensorFlowRatePredictor"
      tensorFlowModel = "ml20mTensorFlowRatePredictorModel"
      timestampField = "tstamp"
      batchSize = 128
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
    }
  ]
  retrievers = []
  predictors = [
    {
      name = "ml20mTensorFlowRatePredictor"
      configClass = "org.grouplens.samantha.server.predictor.TensorFlowPredictorConfig"
      modelName = "ml20mTensorFlowRatePredictorModel"
      modelFile = ${samantha.modelDir}"/ml20mTensorFlowRatePredictorModel.bin"
      graphDefFilePath = ${samantha.modelDir}"/tensorflow.graph"
      entityDaosConfig = ${samantha.entityDaosConfig}
      daoConfigKey = "daoConfig"
      evaluatorNames = []
      updateOperationName = "update_op"
      lossOperationName = "loss_op"
      initOperationName = "init_op"
      outputOperationName = "pred_op"
      indexKeys = ["USER_ID", "MOVIE_ID", "GENRE", "TAG", "SEQ_LEN"]
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.TFIDFKnnExpander"
          modelName = "ml20mTFIDFMovieGenreKnnModel"
          modelFile = ${samantha.modelDir}"/m20mTFIDFMovieGenreKnnModel.bin"
          itemAttrs = ["movieId"]
          feaAttrs = ["genre"]
          scoreAttr = "genreTFIDF"
          expandersConfig = [
            {
              expanderClass = "org.grouplens.samantha.server.expander.SeparatedStringExpander"
              nameAttr = "genres"
              valueAttr = "genre"
              separator = "|"
            }
          ]
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.TFIDFKnnExpander"
          modelName = "ml20mTFIDFMovieTagKnnModel"
          modelFile = ${samantha.modelDir}"/m20mTFIDFMovieTagKnnModel.bin"
          itemAttrs = ["movieId"]
          feaAttrs = ["tag"]
          scoreAttr = "tagTFIDF"
        }
      ]
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            indexName = "USER_ID"
            attrName = "userId"
            feaName = "user"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.SeparatedStringExtractorConfig"
            indexName = "MOVIE_ID"
            attrName = "movieId"
            feaName = "item"
            separator = "|"
            normalize = false
            maxFeatures = 500
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.SeparatedStringExtractorConfig"
            indexName = "GENRE"
            attrName = "genre"
            feaName = "genre"
            separator = "|"
            normalize = false
            maxFeatures = 500
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.SeparatedStringExtractorConfig"
            indexName = "TAG"
            attrName = "tag"
            feaName = "tag"
            separator = "|"
            normalize = false
            maxFeatures = 500
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.SeparatedStringSizeExtractorConfig"
            indexName = "SEQ_LEN"
            attrName = "movieId"
            feaName = "sequence_length"
            separator = "|"
            maxFeatures = 500
          }
        ]
      }
      onlineMethodConfig {
        methodClass = "org.grouplens.samantha.server.solver.TensorFlowMethodConfig"
      }
      methodConfig {
        methodClass = "org.grouplens.samantha.server.solver.TensorFlowMethodConfig"
        maxIter = 20
      }
    }
  ]
  rankers = []
  recommenders = []
  router {
    configClass = "org.grouplens.samantha.server.router.BasicRouterConfig"
    recommenderKey = "recommender"
    predictorKey = "predictor"
  }
  evaluators = []
  schedulers = []
}
