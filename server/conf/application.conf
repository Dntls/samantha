# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# Other configuration
play.http.parser.maxMemoryBuffer = 1024M
play.http.filters = "org.grouplens.samantha.server.common.Filters"
application.global = "org.grouplens.samantha.server.common.ServerGlobal"

# Main configurations for samantha
samantha {
  elasticSearch {
    host = "127.0.0.1"
    port = 9300
    clusterName = "samantha"
    setting {
      index {
        number_of_shards = 1
        number_of_replicas = 0
      }
    }
  }
  redis {
    host = "127.0.0.1"
    port = 6379
    dbid = 0
  }
  modelDir = "data/models"
  dataDir = "data/learning"
  backupDir = "data/backup"
  csvFileService {
    dataDirs = ["data/csvData/"]
    maxWriter = 3
  }
  simpleDaosConfig {
    entityDaoKey = "entityDaoName"
    RequestEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.RequestEntityDAOConfig"
      entitiesKey = "entities"
    }
    CSVFileEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.CSVFileDAOConfig"
      filePathKey = "filePath"
      separatorKey = "separator"
    }
    CSVFileListEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.CSVFileListDAOConfig"
      filesKey = "files"
      separatorKey = "separator"
    }
    CSVDirEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.CSVDirDAOConfig"
      filePathKey = "dirPath"
      separatorKey = "separator"
    }
    JsonFileEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.JsonFileDAOConfig"
      filePathKey = "filePath"
    }
    JsonFileListEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.JsonFileListDAOConfig"
      filesKey = "files"
    }
    JsonDirEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.JsonDirDAOConfig"
      filePathKey = "dirPath"
    }
    RequestItemIDListDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.RequestItemIDListDAOConfig"
      attrName = "movieId"
      itemListKey = "movieIds"
    }
    IndexerBasedDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.IndexerBasedDAOConfig"
      indexerNameKey = "indexerName"
      indexerReqKey = "requestContext"
    }
    ESBasedDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.ESBasedDAOConfig"
      retrieverNameKey = "retrieverName"
      setScrollKey = "setScroll"
    }
    SQLBasedDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.SQLBasedDAOConfig"
      retrieverNameKey = "retrieverName"
      setCursorKey = "setCursor"
    }
  }
  entityDaosConfig = ${samantha.simpleDaosConfig}
  entityDaosConfig.TimeFilteredDAO {
    daoConfigClass = "org.grouplens.samantha.server.dao.TimeFilteredDAOConfig"
    entityDaosConfig = ${samantha.simpleDaosConfig}
    timestampField = "tstamp"
    beginTimeKey = "beginTime"
    endTimeKey = "endTime"
    subDaoConfigKey = "subDaoConfig"
  }
  entityDaosConfig.CatDAO {
    daoConfigClass = "org.grouplens.samantha.server.dao.CatDAOConfig"
    subDaosConfigKey = "subDaosConfig"
    entityDaosConfig = ${samantha.simpleDaosConfig}
    entityDaosConfig.TimeFilteredDAO = ${samantha.entityDaosConfig.TimeFilteredDAO}
  }
  engines.enabled = ["behance"]
}

# Include your own engines' configurations if you have
include "starter.conf"
include "behance.conf"

# Local configurations that won't be source controlled. Override as your local environment needs
include "local.application.conf"
