samantha.entityDaosConfig.TimeFilteredDAO {
  daoConfigClass = "org.grouplens.samantha.server.dao.TimeFilteredDAOConfig"
  entityDaosConfig = ${samantha.simpleDaosConfig}
  timestampField = "unixReviewTime"
  beginTimeKey = "beginTime"
  endTimeKey = "endTime"
  subDaoConfigKey = "subDaoConfig"
}

samantha.glocal {
  engineType = "RECOMMENDER"
  indexers = [
    {
      name = "loggerBasedIndexer"
      configClass = "org.grouplens.samantha.server.indexer.LoggerBasedIndexerConfig"
    }, {
      name = "tensorFlowFeaturizedJsonBatch"
      configClass = "org.grouplens.samantha.server.indexer.JsonFileIndexerConfig"
      indexType = "glocalTensorFlowFeaturizedJsonBatchTstampTest"
      filesKey = "files"
      timestampField = "unixReviewTime"
      daoName = "TimeFilteredDAO"
      daoNameKey = "entityDaoName"
      subDaoName = "JsonFileListEntityDAO"
      subDaoConfigKey = "subDaoConfig"
      beginTimeKey = "beginTime"
      endTimeKey = "endTime"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
      dataSubscribers = []
    }, {
      name = "featurizedItemAttributeRelation"
      configClass = "org.grouplens.samantha.server.indexer.JsonFileIndexerConfig"
      indexType = "glocalFeaturizedItemAttributeRelationTstampTest"
      filesKey = "files"
      timestampField = "unixReviewTime"
      daoName = "TimeFilteredDAO"
      daoNameKey = "entityDaoName"
      subDaoName = "JsonFileListEntityDAO"
      subDaoConfigKey = "subDaoConfig"
      beginTimeKey = "beginTime"
      endTimeKey = "endTime"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
      dataSubscribers = []
    }, {
      name = "userPlaceReview"
      configClass = "org.grouplens.samantha.server.indexer.CSVFileIndexerConfig"
      indexType = "glocalUserPlaceReview"
      filesKey = "files"
      separatorKey = "separator"
      dataFields = ["unixReviewTime", "gPlusUserId", "gPlusPlaceId", "city", "rating"]
      timestampField = "unixReviewTime"
      daoName = "TimeFilteredDAO"
      daoNameKey = "entityDaoName"
      subDaoName = "CSVFileListEntityDAO"
      subDaoConfigKey = "subDaoConfig"
      beginTimeKey = "beginTime"
      endTimeKey = "endTime"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
      dataSubscribers = []
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.MapItemId2InfoExpander"
          modelName = "glocalTFIDFPlaceInfoModel"
          modelFile = ${samantha.modelDir}"/glocalTFIDFPlaceInfoModel.bin"
          idField = "gPlusPlaceId"
          infoFields = ["city"]
          daoConfigKey = "daoConfig"
          entityDaosConfig = ${samantha.entityDaosConfig}
        }
      ]
    }, {
      name = "groupedUserPlaceReview"
      configClass = "org.grouplens.samantha.server.indexer.GroupedIndexerConfig"
      dependedIndexer = "userPlaceReview"
      dataFields = ["unixReviewTime", "gPlusUserId", "gPlusPlaceId", "city", "rating"]
      filesKey = "files"
      separatorKey = "separator"
      daoName = "CSVFileListEntityDAO"
      daoNameKey = "entityDaoName"
      groupKeys = ["gPlusUserId"]
      orderFields = ["unixReviewTime"]
      orderFieldsTypes = ["INT"]
      numBuckets = 500
      skip = false
      separator = "\t"
      dataDir = ${samantha.dataDir}"/glocalGroupedUserPlaceReview"
      dataDirKey = "dataDir"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
    }, {
      name = "userPlaceReviewSequence"
      configClass = "org.grouplens.samantha.server.tensorflow.UserSequenceIndexerConfig"
      dependedIndexer = "groupedUserPlaceReview"
      groupKeys = ["gPlusUserId"]
      otherDataFields = ["unixReviewTime", "gPlusPlaceId", "city", "rating"]
      filesKey = "files"
      filePath = ${samantha.dataDir}"/glocalUserPlaceReviewSequence.tsv"
      filePathKey = "filePath"
      separatorKey = "separator"
      daoName = "CSVFileListEntityDAO"
      daoNameKey = "entityDaoName"
      separator = "\t"
      innerFieldSeparator = "<>"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
    }, {
      name = "userSequenceTensorFlowBatch"
      configClass = "org.grouplens.samantha.server.tensorflow.TensorFlowBatchIndexerConfig"
      dependedIndexer = "tensorFlowFeaturizedJsonBatch"
      tensorFlowPredictor = "glocalTensorFlowReviewPredictor"
      tensorFlowModel = "glocalTensorFlowReviewPredictorModel"
      timestampField = "unixReviewTime"
      batchSize = 32
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.TruncatingExpander"
          nameAttrs = ["unixReviewTime", "gPlusPlaceId", "city", "rating"]
          valueAttrs = ["unixReviewTime", "gPlusPlaceId", "city", "rating"]
          separator = "<>"
          joiner = "<>"
          maxStepNum = 500
          backward = true
        }
      ]
    }, {
      name = "itemAttributeTensorFlowBatch"
      configClass = "org.grouplens.samantha.server.tensorflow.TensorFlowBatchIndexerConfig"
      dependedIndexer = "featurizedItemAttributeRelation"
      tensorFlowPredictor = "glocalTensorFlowReviewPredictor"
      tensorFlowModel = "glocalTensorFlowReviewPredictorModel"
      timestampField = "unixReviewTime"
      batchSize = 32
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.entityDaosConfig}
    }
  ]
  retrievers = [
   {
      name = "glocalTensorFlowReviewPredictorRetriever"
      configClass = "org.grouplens.samantha.server.tensorflow.TensorFlowBasedRetrieverConfig"
      predictorName = "glocalTensorFlowReviewPredictor"
      modelName = "glocalTensorFlowReviewPredictorModel"
   }
  ]
  predictors = [
    {
      name = "glocalTensorFlowReviewPredictor"
      configClass = "org.grouplens.samantha.server.tensorflow.TensorFlowPredictorConfig"
      modelName = "glocalTensorFlowReviewPredictorModel"
      modelFile = ${samantha.modelDir}"/glocalTensorFlowReviewPredictorModel.bin"
      modelExportDir = ${samantha.modelDir}"/glocal_tensorflow_review.model"
      entityDaosConfig = ${samantha.entityDaosConfig}
      daoConfigKey = "daoConfig"
      evaluatorNames = []
      updateOper = "update_op"
      lossOper = "metrics/train_loss_op"
      initOper = "init_op"
      outputOper = "prediction/item_pred_op"
      topKOper = "prediction/item_top_k_op"
      topKId = "topKId"
      topKValue = "topKValue"
      itemIndex = "GPLUS_PLACE_ID"
      indexKeys = ["GPLUS_USER_ID", "GPLUS_PLACE_ID", "CITY", "SEQ_LEN", "TSTAMP"]
      predItemFea = "item_eval"
#      equalSizeChecks = [
#        {
#          "featuresWithEqualSizes": ["item", "city"]
#        }, {
#          "featuresWithEqualSizes": ["user", "sequence_length"]
#        }
#      ]
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            indexName = "GPLUS_USER_ID"
            attrName = "gPlusUserId"
            feaName = "user"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultipleSeparatedStringExtractorConfig"
            indexNames = ["GPLUS_PLACE_ID", "CITY"]
            attrNames = ["gPlusPlaceId", "city"]
            feaNames = ["item", "city"]
            separator = "<>"
            normalize = false
            #fillIn = ""
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.SeparatedStringSizeExtractorConfig"
            indexName = "SEQ_LEN"
            attrName = "gPlusPlaceId"
            feaName = "sequence_length"
            separator = "<>"
            #alwaysExtract = true
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.SeparatedIdentityExtractorConfig"
            indexName = "TSTAMP"
            attrName = "unixReviewTime"
            feaName = "tstamp"
            separator = "<>"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.SeparatedStringExtractorConfig"
            indexName = "GPLUS_PLACE_ID"
            attrName = "gPlusPlaceIdEval"
            keyPrefix = "gPlusPlaceId"
            feaName = "item_eval"
            separator = "<>"
            normalize = false
          }
        ]
      }
      onlineMethodConfig {
        methodClass = "org.grouplens.samantha.server.solver.TensorFlowMethodConfig"
      }
      methodConfig {
        methodClass = "org.grouplens.samantha.server.solver.TensorFlowMethodConfig"
        maxIter = 20
      }
    }
  ]
  rankers = [
    {
      name = "glocalTensorFlowBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.EntityFieldRankerConfig"
      orderField = "topKValue"
    }
  ]
  recommenders = [
    {
      name = "glocalTensorFlowReviewRecommender"
      configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
      retriever = "glocalTensorFlowReviewPredictorRetriever"
      ranker = "glocalTensorFlowBasedRanker"
    }
  ]
  router {
    configClass = "org.grouplens.samantha.server.router.BasicRouterConfig"
    recommenderKey = "recommender"
    predictorKey = "predictor"
  }
  evaluators = [
    {
      name = "ReviewSampledAUCEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.PredictionEvaluatorConfig"
      predictionIndexers = []
      indexers = ["loggerBasedIndexer"]
      predictorKey = "predictor"
      groupKeys = ["gPlusUserId"]
      entityDaosConfig = ${samantha.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      labelAttr = "reviewEval"
      separator = "<>"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.LogicalExpander"
          sourceAttrs = ["unixReviewTime"]
          valueAttr = "review"
          separator = "<>"
          joiner = "<>"
          or = true
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.TruncatingExpander"
          nameAttrs = ["unixReviewTime", "gPlusPlaceId", "city", "review"]
          valueAttrs = ["unixReviewTime", "gPlusPlaceId", "city", "review"]
          separator = "<>"
          joiner = "<>"
          maxStepNum = 500
          backward = true
        }, {
          #expanderClass = "org.grouplens.samantha.server.expander.SequenceTstampSplitExpander"
          expanderClass = "org.grouplens.samantha.server.expander.SequenceStepSplitExpander"
          nameAttrs = ["gPlusPlaceId", "unixReviewTime", "city", "review"]
          beforeAttrs = ["gPlusPlaceId", "unixReviewTime", "city", "review"]
          afterAttrs = ["gPlusPlaceIdEval", "unixReviewTimeEval", "cityEval", "reviewEval"]
          #tstampAttr = "unixReviewTime"
          #splitTstamp = 1393653600 #2014-03-01
          trainSteps = 500
          evalSteps = 1
          separator = "<>"
          joiner = "<>"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.NegativeSamplingExpander"
          predictorName = "glocalTensorFlowReviewPredictor"
          modelName = "glocalTensorFlowReviewPredictorModel"
          keyPrefix = "gPlusPlaceId"
          itemAttr = "gPlusPlaceIdEval"
          labelAttr = "reviewEval"
          itemIndex = "GPLUS_PLACE_ID"
          separator = "<>"
          joiner = "<>"
          #maxNumSample = 2000
        }
      ]
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.AUCConfig"
          labelName = "reviewEval"
          labelKey = "labelName"
          aucType = "GLOBAL"
        }, {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.AUCConfig"
          labelName = "reviewEval"
          labelKey = "labelName"
          aucType = "PERGROUP"
        }
      ]
    }, {
      name = "RecommendationEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.RecommendationEvaluatorConfig"
      recommendationIndexers = []
      indexers = ["loggerBasedIndexer"]
      recommenderKey = "recommender"
      entityDaosConfig = ${samantha.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      groupKeys = ["gPlusUserId"]
      itemKeys = ["gPlusPlaceIdEval"]
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.LogicalExpander"
          sourceAttrs = ["unixReviewTime"]
          valueAttr = "review"
          separator = "<>"
          joiner = "<>"
          or = true
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.TruncatingExpander"
          nameAttrs = ["unixReviewTime", "gPlusPlaceId", "city", "review"]
          valueAttrs = ["unixReviewTime", "gPlusPlaceId", "city", "review"]
          separator = "<>"
          joiner = "<>"
          maxStepNum = 500
          backward = true
        }, {
          #expanderClass = "org.grouplens.samantha.server.expander.SequenceTstampSplitExpander"
          expanderClass = "org.grouplens.samantha.server.expander.SequenceStepSplitExpander"
          nameAttrs = ["gPlusPlaceId", "unixReviewTime", "city", "review"]
          beforeAttrs = ["gPlusPlaceId", "unixReviewTime", "city", "review"]
          afterAttrs = ["gPlusPlaceIdEval", "unixReviewTimeEval", "cityEval", "reviewEval"]
          #tstampAttr = "unixReviewTime"
          #splitTstamp = 1393653600 #2014-03-01
          trainSteps = 500
          evalSteps = 1
          separator = "<>"
          joiner = "<>"
        }
      ]
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.MAPConfig"
          itemKeys = ["gPlusPlaceIdEval"]
          recKeys = ["gPlusPlaceId"]
          N = [1, 5, 8, 15, 20, 24]
        }
      ]
    }
  ]
  schedulers = []
}
